apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

dependencies {
    compile 'joda-time:joda-time:2.1'

    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            name "Reinaldo Arrosi"
            email "rarrosi@gmail.com"
        }
    }
	scm {
		connection "scm:git:git://github.com/reinaldoarrosi/QueryBuilder.git"
		developerConnection "scm:git:ssh://github.com:	reinaldoarrosi/QueryBuilder.git"
		url "https://github.com/reinaldoarrosi/QueryBuilder/tree/master"
	}
}

publishing {
	publications {
		QueryBuilderPublication(MavenPublication) {
			from components.java
			groupId 'com.github.reinaldoarrosi'
			artifactId 'query-builder'
			version '0.1.1'
			artifact sourcesJar
			artifact javadocJar
			
			pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Fluent Android library to build SQLite select statements')
                root.appendNode('name', 'com.github.reinaldoarrosi:query-builder')
                root.appendNode('url', 'https://github.com/reinaldoarrosi/QueryBuilder')
                root.children().last() + pomConfig
            }
		}
	}
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
	user = properties.getProperty('bintray.user')
	key = properties.getProperty('bintray.apikey')
	publications = ['QueryBuilderPublication']
	pkg {
		repo = 'maven'
		name = 'query-builder'
		version {
			name = '0.1.1'
			gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
		}
	}
}